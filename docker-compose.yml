name: "safeguard-io"

services:
    postgres:
        image: postgres
        environment:
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_DB: ${DB_NAME}
            POSTGRES_USER: ${DB_USER}
        ports:
            - "${DB_PORT}:5432"
        healthcheck:
            test: ["CMD-SHELL", "sh -c 'pg_isready -U ${DB_USER} -d ${DB_NAME}'"]
            interval: 5s
            timeout: 5s
            retries: 5
        volumes:
            - database_data:/var/lib/postgresql/data
        env_file:
            - .env

    react-chatbot:
        build:
            context: .
            dockerfile: ./src/Dockerfile.chatbot
        env_file:
            - .env
        depends_on:
            postgres:
                condition: service_healthy
        volumes:
            - ./src:/app
        restart: always

    scheduler:
        build:
            context: .
            dockerfile: ./src/Dockerfile.scheduler
        env_file:
            - .env
        depends_on:
            postgres:
                condition: service_healthy
        volumes:
            - ./src:/app
        restart: always

    verif-process:
        build:
            context: .
            dockerfile: ./src/Dockerfile.verif_process
        env_file:
            - .env
        depends_on:
            postgres:
                condition: service_healthy
        volumes:
            - ./src:/app
        restart: always

volumes:
    database_data:
        driver: local